{"version":3,"names":["WrapperSplashScreenProps","Component","SplashScreenComponent","children","isLoading","isReady","setIsReady","useApp","hideSplashScreen","useCallback","useEffect","SplashScreen","hideAsync"],"sources":["WrapperSplashScreen.tsx"],"sourcesContent":["import * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect } from 'react';\nimport { useApp } from '../context';\n\nexport interface SplashScreenProps {\n  hideSplashScreen: () => void;\n}\n\nexport interface WrapperSplashScreenProps {\n  Component?: React.FC<SplashScreenProps>;\n  children: React.ReactNode;\n}\n\nexport const WrapperSplashScreenProps = ({\n  Component: SplashScreenComponent,\n  children,\n}: WrapperSplashScreenProps) => {\n  const { isLoading, isReady, setIsReady } = useApp();\n\n  const hideSplashScreen = useCallback(() => {\n    setIsReady(true);\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading) {\n      SplashScreen.hideAsync();\n\n      if (!SplashScreenComponent) {\n        setIsReady(true);\n      }\n    }\n  }, [isLoading, setIsReady, SplashScreenComponent]);\n  \n  return (\n    <>\n      {!!isReady && children}\n      {!!SplashScreenComponent && !isLoading && !isReady && (\n        <SplashScreenComponent hideSplashScreen={hideSplashScreen} />\n      )}\n    </>\n  );\n};\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;AAWO,MAAMA,wBAAwB,GAAG,QAGR;EAAA,IAHS;IACvCC,SAAS,EAAEC,qBAD4B;IAEvCC;EAFuC,CAGT;EAC9B,MAAM;IAAEC,SAAF;IAAaC,OAAb;IAAsBC;EAAtB,IAAqC,IAAAC,eAAA,GAA3C;EAEA,MAAMC,gBAAgB,GAAG,IAAAC,kBAAA,EAAY,MAAM;IACzCH,UAAU,CAAC,IAAD,CAAV;EACD,CAFwB,EAEtB,EAFsB,CAAzB;EAIA,IAAAI,gBAAA,EAAU,MAAM;IACd,IAAI,CAACN,SAAL,EAAgB;MACdO,YAAY,CAACC,SAAb;;MAEA,IAAI,CAACV,qBAAL,EAA4B;QAC1BI,UAAU,CAAC,IAAD,CAAV;MACD;IACF;EACF,CARD,EAQG,CAACF,SAAD,EAAYE,UAAZ,EAAwBJ,qBAAxB,CARH;EAUA,oBACE,4DACG,CAAC,CAACG,OAAF,IAAaF,QADhB,EAEG,CAAC,CAACD,qBAAF,IAA2B,CAACE,SAA5B,IAAyC,CAACC,OAA1C,iBACC,6BAAC,qBAAD;IAAuB,gBAAgB,EAAEG;EAAzC,EAHJ,CADF;AAQD,CA5BM"}