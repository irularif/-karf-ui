{"version":3,"names":["AppContext","React","createContext","undefined","useApp","context","useContext","Error"],"sources":["context.ts"],"sourcesContent":["import React, { useContext } from 'react';\nimport type { ScaledSize } from 'react-native';\nimport type { TDevice, TOrientation } from '../ScreenProvider/context';\n\ntype TInitialState = 'fonts';\n\nexport type TApp = {\n  initialize: Record<TInitialState, boolean>;\n  isReady: boolean;\n  size: TDevice;\n  orientation: TOrientation;\n  scaleSize: ScaledSize;\n}\n\nexport type TAppContext = TApp & {\n  isLoading: boolean;\n  updateInitialize: (key: TInitialState, state: boolean) => void;\n  setIsReady: (value: boolean) => void;\n};\n\nexport const AppContext = React.createContext<TAppContext | undefined>(undefined);\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within a AppProvider');\n  }\n\n  return context;\n};\n"],"mappings":";;;;;;;AAAA;;;;;;AAoBO,MAAMA,UAAU,gBAAGC,cAAA,CAAMC,aAAN,CAA6CC,SAA7C,CAAnB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAC1B,MAAMC,OAAO,GAAG,IAAAC,iBAAA,EAAWN,UAAX,CAAhB;;EACA,IAAIK,OAAO,KAAKF,SAAhB,EAA2B;IACzB,MAAM,IAAII,KAAJ,CAAU,0CAAV,CAAN;EACD;;EAED,OAAOF,OAAP;AACD,CAPM"}