{"version":3,"names":["get","merge","defaultTheme","ThemeContext","ThemedComponent","WrappedComponent","displayName","Object","assign","props","children","rest","context","newProps","theme","colors","mode","spacing","font","shadow","styles","basicStyle","basicTheme","style","withTheme","name","Component"],"sources":["withTheme.tsx"],"sourcesContent":["import { get, merge } from 'lodash';\nimport type { Responsive } from '../ScreenProvider/context';\nimport { defaultTheme, ITheme, IThemeContext, ThemeContext } from '../ThemeProvider/context';\n\nexport type RNFunctionComponent<T> = React.FC<\n  T & {\n    theme?: ITheme;\n  } & Partial<Responsive>\n>;\n\nconst ThemedComponent = (WrappedComponent: any, displayName?: string) => {\n  return Object.assign(\n    (props: any) => {\n      const { children, ...rest } = props;\n\n      return (\n        <ThemeContext.Consumer>\n          {(context) => {\n            // If user isn't using ThemeProvider\n            if (!context) {\n              const newProps = {\n                ...rest,\n                theme: defaultTheme,\n                children,\n              };\n\n              return <WrappedComponent {...newProps} />;\n            }\n\n            const { colors, mode, spacing, font, shadow, styles }: IThemeContext = context;\n\n            const basicStyle = get(styles, 'displayName', {});\n            const basicTheme = {\n              colors,\n              mode,\n              spacing,\n              font,\n              shadow,\n              style: basicStyle,\n            };\n            const theme = merge({}, basicTheme, rest.theme);\n\n            const newProps = {\n              ...rest,\n              theme,\n              children,\n            };\n\n            return <WrappedComponent {...newProps} />;\n          }}\n        </ThemeContext.Consumer>\n      );\n    },\n    { displayName: displayName }\n  );\n};\n\nfunction withTheme<P = {}>(WrappedComponent: React.ComponentType<P>): React.FunctionComponent<P> {\n  const name = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\n  const Component = ThemedComponent(WrappedComponent, name);\n\n  return Component;\n}\n\nexport default withTheme;\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,QAA2B,QAA3B;AAEA,SAASC,YAAT,EAA8CC,YAA9C,QAAkE,0BAAlE;;AAQA,MAAMC,eAAe,GAAG,CAACC,gBAAD,EAAwBC,WAAxB,KAAiD;EACvE,OAAOC,MAAM,CAACC,MAAP,CACJC,KAAD,IAAgB;IACd,MAAM;MAAEC,QAAF;MAAY,GAAGC;IAAf,IAAwBF,KAA9B;IAEA,oBACE,oBAAC,YAAD,CAAc,QAAd,QACIG,OAAD,IAAa;MACZ;MACA,IAAI,CAACA,OAAL,EAAc;QACZ,MAAMC,QAAQ,GAAG,EACf,GAAGF,IADY;UAEfG,KAAK,EAAEZ,YAFQ;UAGfQ;QAHe,CAAjB;QAMA,oBAAO,oBAAC,gBAAD,EAAsBG,QAAtB,CAAP;MACD;;MAED,MAAM;QAAEE,MAAF;QAAUC,IAAV;QAAgBC,OAAhB;QAAyBC,IAAzB;QAA+BC,MAA/B;QAAuCC;MAAvC,IAAiER,OAAvE;MAEA,MAAMS,UAAU,GAAGrB,GAAG,CAACoB,MAAD,EAAS,aAAT,EAAwB,EAAxB,CAAtB;MACA,MAAME,UAAU,GAAG;QACjBP,MADiB;QAEjBC,IAFiB;QAGjBC,OAHiB;QAIjBC,IAJiB;QAKjBC,MALiB;QAMjBI,KAAK,EAAEF;MANU,CAAnB;MAQA,MAAMP,KAAK,GAAGb,KAAK,CAAC,EAAD,EAAKqB,UAAL,EAAiBX,IAAI,CAACG,KAAtB,CAAnB;MAEA,MAAMD,QAAQ,GAAG,EACf,GAAGF,IADY;QAEfG,KAFe;QAGfJ;MAHe,CAAjB;MAMA,oBAAO,oBAAC,gBAAD,EAAsBG,QAAtB,CAAP;IACD,CAjCH,CADF;EAqCD,CAzCI,EA0CL;IAAEP,WAAW,EAAEA;EAAf,CA1CK,CAAP;AA4CD,CA7CD;;AA+CA,SAASkB,SAAT,CAA2BnB,gBAA3B,EAAiG;EAC/F,MAAMoB,IAAI,GAAGpB,gBAAgB,CAACC,WAAjB,IAAgCD,gBAAgB,CAACoB,IAAjD,IAAyD,WAAtE;EAEA,MAAMC,SAAS,GAAGtB,eAAe,CAACC,gBAAD,EAAmBoB,IAAnB,CAAjC;EAEA,OAAOC,SAAP;AACD;;AAED,eAAeF,SAAf"}