{"version":3,"names":["React","useContext","AppContext","createContext","undefined","useApp","context","Error"],"sources":["context.ts"],"sourcesContent":["import React, { useContext } from 'react';\nimport type { ScaledSize } from 'react-native';\nimport type { TDevice, TOrientation } from '../ScreenProvider/context';\n\ntype TInitialState = 'fonts';\n\nexport type TApp = {\n  initialize: Record<TInitialState, boolean>;\n  isReady: boolean;\n  size: TDevice;\n  orientation: TOrientation;\n  scaleSize: ScaledSize;\n}\n\nexport type TAppContext = TApp & {\n  isLoading: boolean;\n  updateInitialize: (key: TInitialState, state: boolean) => void;\n  setIsReady: (value: boolean) => void;\n};\n\nexport const AppContext = React.createContext<TAppContext | undefined>(undefined);\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within a AppProvider');\n  }\n\n  return context;\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAoBA,OAAO,MAAMC,UAAU,gBAAGF,KAAK,CAACG,aAAN,CAA6CC,SAA7C,CAAnB;AAEP,OAAO,MAAMC,MAAM,GAAG,MAAM;EAC1B,MAAMC,OAAO,GAAGL,UAAU,CAACC,UAAD,CAA1B;;EACA,IAAII,OAAO,KAAKF,SAAhB,EAA2B;IACzB,MAAM,IAAIG,KAAJ,CAAU,0CAAV,CAAN;EACD;;EAED,OAAOD,OAAP;AACD,CAPM"}